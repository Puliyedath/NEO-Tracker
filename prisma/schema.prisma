// This is your Prisma schema file for MongoDB
// E-commerce Product Catalog

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Product model - Main product information
model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  category    String
  brand       String?
  basePrice   Float
  sku         String   @unique
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  variants ProductVariant[]
  assets   ProductAsset[]

  @@map("products")
}

// Product variant model - Color, size, and stock variations
model ProductVariant {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  productId     String   @db.ObjectId
  color         String
  size          String
  sku           String   @unique
  price         Float
  stockQuantity Int      @default(0)
  isAvailable   Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  product Product        @relation(fields: [productId], references: [id], onDelete: Cascade)
  assets  ProductAsset[]

  @@map("product_variants")
}

// Product asset model - Product images and media
model ProductAsset {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  productId    String   @db.ObjectId
  variantId    String?  @db.ObjectId
  url          String
  altText      String?
  type         String // 'image', 'video', etc.
  isPrimary    Boolean  @default(false)
  displayOrder Int      @default(0)
  createdAt    DateTime @default(now())

  // Relations
  product Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  variant ProductVariant? @relation(fields: [variantId], references: [id], onDelete: Cascade)

  @@map("product_assets")
}
